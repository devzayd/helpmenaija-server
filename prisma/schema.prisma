generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model contacts {
  id              String   @id(map: "PK_b99cd40cfd66a99f1571f4f72e6") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String
  username        String
  twitter_user_id String
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  userId          String?  @db.Uuid
  users           users?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_30ef77942fc8c05fcb829dcc61d")
}

model keywords {
  id         String   @id(map: "PK_4aa660a7a585ed828da68f3c28e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String
  updated_at DateTime @default(now()) @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
}

model session_entity {
  expiredAt   BigInt
  id          String    @id(map: "PK_897bc09b92e1a7ef6b30cba4786") @db.VarChar(255)
  json        String?
  destroyedAt DateTime? @db.Timestamp(6)

  @@index([expiredAt], map: "IDX_7d2e5aa5b5cf129432c1222c82")
}

model users {
  id              String     @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  username        String
  twitter_user_id String
  updated_at      DateTime   @default(now()) @db.Timestamp(6)
  created_at      DateTime   @default(now()) @db.Timestamp(6)
  contacts        contacts[]
}
